angular.module('starter').controller('PaymentStripeController',function($scope,PaymentStripe){angular.extend($scope,{showForm:!1,showPaymentForm:!1});$scope.onSelect=function(){$scope.showPaymentForm=!$scope.showPaymentForm;try{$scope.options.onSelect({paymentId:PaymentStripe.paymentId,shortName:'stripe'})}catch(e){console.error('Something wrong occurred, please review your Stripe configuration.',e)}};$scope.toggleForm=function(){$scope.showForm=!$scope.showForm}});angular.module('starter').directive('paymentStripeForm',function(){return{restrict:'E',replace:!0,templateUrl:'features/payment_stripe/assets/templates/l1/payment-stripe-form.html',controller:function($scope,$rootScope,$translate,PaymentStripe,PaymentMethod){$scope.buttonText='Pay';$scope.action='card-payment';if(PaymentMethod.AUTHORIZATION===$scope.options.type){$scope.buttonText='Save';$scope.action='card-setup'}
$scope.title='Card details';$scope.validateAction=function(){switch($scope.action){case 'card-payment':default:PaymentStripe.handleCardPayment().then(function(payload){});break;case 'card-authorize':PaymentStripe.handleCardAuthorization().then(function(payload){});break;case 'card-setup':PaymentStripe.handleCardSetup().then(function(payload){$rootScope.$broadcast('paymentStripeCards.refresh')});break}};$scope.init=function(){PaymentStripe.initCardForm()};$scope.init()}}});angular.module('starter').directive('paymentStripeCards',function(PaymentMethod){return{restrict:'E',replace:!0,scope:{actions:'='},templateUrl:'features/payment_stripe/assets/templates/l1/payment-stripe-cards.html',controller:function($scope,$rootScope,$pwaRequest,$q,$timeout,Dialog,Loader,PaymentStripe){$scope.isLoading=!0;$scope.fetchVaults=function(){$scope.isLoading=!0;PaymentStripe.fetchVaults().then(function(payload){$timeout(function(){$scope.cards=payload.vaults})},function(error){Dialog.alert('Error',error.message,'OK',-1,'payment_stripe')}).then(function(){$scope.isLoading=!1})};$scope.doAction=function(action,card){var defer=$q.defer();switch(action){default:Dialog.alert('Error',"This action doesn't exists.",'OK',-1).then(function(){defer.reject('Unkown action')});break;case PaymentMethod.ACTION_PAY:Dialog.confirm('Confirmation','Are you sure you want to use this card?',['Yes, continue','No'],'text-center','payment_stripe').then(function(result){if(result){PaymentStripe.handleCardPayment(card,$scope.$parent.options).then(function(success){defer.resolve(success);$scope.$parent.options.onSuccess({paymentId:PaymentStripe.paymentId,shortName:'stripe'})},function(error){defer.reject(error);$scope.$parent.options.onError({paymentId:PaymentStripe.paymentId,shortName:'stripe'})})}});break;case PaymentMethod.ACTION_AUTHORIZE:Dialog.confirm('Confirmation','Are you sure you want to use this card?',['Yes, continue','No'],'text-center','payment_stripe').then(function(result){if(result){PaymentStripe.handleCardAuthorization(card,$scope.$parent.options).then(function(success){defer.resolve(success);$scope.$parent.options.onSuccess({paymentId:PaymentStripe.paymentId,shortName:'stripe'})},function(error){defer.reject(error);$scope.$parent.options.onError({paymentId:PaymentStripe.paymentId,shortName:'stripe'})})}});break;case PaymentMethod.ACTION_DELETE:Loader.hide();Dialog.confirm('Confirmation','Are you sure you want to delete this card?',['Yes, continue','No'],'','payment_stripe').then(function(result){if(result){PaymentStripe.deletePaymentMethod(card).then(function(success){defer.resolve(success)},function(error){defer.reject(error)})}});break}
return defer.promise};$scope.brand=function(brand){var _brand=(brand===undefined)?'':brand.toLowerCase();switch(_brand){case 'visa':return'./features/payment_stripe/assets/templates/images/003-cc-visa.svg';case 'mastercard':return'./features/payment_stripe/assets/templates/images/004-cc-mastercard.svg';case 'american express':return'./features/payment_stripe/assets/templates/images/005-cc-amex.png'}
return'./features/payment_stripe/assets/templates/images/006-cc.svg'};$scope.actionIcon=function(action){switch(action){default:case PaymentMethod.ACTION_PAY:case PaymentMethod.ACTION_AUTHORIZE:return'icon ion-android-arrow-forward';case PaymentMethod.ACTION_DELETE:return'icon ion-trash-a assertive'}};$rootScope.$on('paymentStripeCards.refresh',function(){$scope.fetchVaults()});$rootScope.$on('paymentMethod.refresh',function(){$scope.fetchVaults()});$scope.fetchVaults()}}});angular.module('starter').service('PaymentStripe',function(Application,Loader,Dialog,$rootScope,$injector,$translate,$pwaRequest,$q){var service={card:null,elements:null,stripe:null,settings:null,isReadyPromise:$q.defer(),publishableKey:null,setupIntent:null,paymentId:null};service.onStart=function(){if(typeof Stripe==='undefined'){var stripeJS=document.createElement('script');stripeJS.type='text/javascript';stripeJS.src='https://js.stripe.com/v3/';stripeJS.onload=function(){service.isReadyPromise.resolve(Stripe);service.fetchSettings().then(function(payload){service.settings=payload.settings;service.setPublishableKey(service.settings.publishable_key)},function(error){console.error(error.message)})};document.body.appendChild(stripeJS)}else{service.isReadyPromise.resolve(Stripe)}};service.isReady=function(){if(!angular.isDefined(service.publishableKey)){return $q.reject($translate.instant("Stripe publishable key is required."))}
return service.isReadyPromise.promise};service.setPublishableKey=function(publishableKey){var deferred=$q.defer();if(publishableKey!==undefined&&publishableKey.length<=0){deferred.reject("publishableKey is required.");throw new Error("publishableKey is required.")}
if(service.publishableKey!==publishableKey||!service.stripe){service.publishableKey=publishableKey;try{service.stripe=Stripe(service.publishableKey)}catch(e){console.warn('[Stripe]: '+e.message)}
try{service.card.destroy()}catch(e){}}
if(!service.stripe){try{service.stripe=Stripe(service.publishableKey);service.card.destroy()}catch(e){}}
deferred.resolve(service.publishableKey);return deferred.promise};service.initCardForm=function(){return service.isReady().then(function(){var cardElementParent=document.getElementById('card_element');try{cardElementParent.firstChild.remove()}catch(e){}
service.elements=service.stripe.elements();var style={base:{color:"#32325d",fontFamily:"'Helvetica Neue', Helvetica, sans-serif",fontSmoothing:"antialiased",fontSize:"16px","::placeholder":{color:"#aab7c4"}},invalid:{color:"#fa755a",iconColor:"#fa755a"}};service.card=service.elements.create('card',{hidePostalCode:!0,style:style});var saveElement=document.getElementById('save_element');var displayError=document.getElementById('card_errors');var displayErrorParent=document.getElementById('card_errors_parent');saveElement.setAttribute('disabled','disabled');service.card.removeEventListener('change');service.card.addEventListener('change',function(event){if(!event.complete&&(event.error!==undefined)){displayErrorParent.classList.remove('ng-hide');try{displayError.textContent=event.error.message}catch(e){console.log('unknown error: ',event)}
saveElement.setAttribute('disabled','disabled')}else{displayErrorParent.classList.add('ng-hide');displayError.textContent='';saveElement.removeAttribute('disabled')}});service.card.mount("#card_element")})};service.handleCardAuthorization=function(card,options){var deferred=$q.defer();try{var authorizeMessage=options.labels.authorizeLoaderMessage?options.labels.authorizeLoaderMessage:$translate.instant('Authorizing payment...','payment_stripe');Loader.show(authorizeMessage);service.fetchPaymentIntent(card,options).then(function(fpiSuccess){service.paymentId=fpiSuccess.paymentId;console.log('[REMOVE ME]',fpiSuccess,['requires_confirmation','requires_action'].indexOf(fpiSuccess.pi_status));if(['requires_confirmation','requires_action'].indexOf(fpiSuccess.pi_status)!==-1){service.stripe.confirmCardPayment(fpiSuccess.client_secret).then(function(ccpResponse){if(ccpResponse.error){Loader.hide();Dialog.alert('Error',ccpResponse.error.message,'OK',-1,'payment_stripe');service.authorizationError(fpiSuccess.pi_id,ccpResponse.error).then(function(aeSuccess){deferred.reject(aeSuccess)},function(aeError){deferred.reject(aeError)});return}
if(ccpResponse.paymentIntent&&ccpResponse.paymentIntent.status==='requires_capture'){service.authorizationSuccess(fpiSuccess.pi_id).then(function(asSuccess){Loader.hide();deferred.resolve(asSuccess)},function(asError){Loader.hide();deferred.resolve(asError)})}})}else{service.authorizationSuccess(fpiSuccess.pi_id).then(function(asSuccess){Loader.hide();deferred.resolve(asSuccess)},function(asError){Loader.hide();deferred.resolve(asError)})}},function(fpiError){Loader.hide();Dialog.alert('Error',fpiError.message,'OK',-1,'payment_stripe');deferred.reject(fpiError)})}catch(tcError){console.log('[tcError]',tcError);deferred.reject(tcError)}
return deferred.promise};service.authorizationError=function(paymentIntentId,error){return $pwaRequest.post('/paymentstripe/mobile_handler/authorization-error',{data:{paymentIntentId:paymentIntentId,error:error}})};service.authorizationSuccess=function(paymentIntentId){return $pwaRequest.post('/paymentstripe/mobile_handler/authorization-success',{data:{paymentIntentId:paymentIntentId}})};service.handleCardPayment=function(card,options){var deferred=$q.defer();try{var payMessage=options.labels.payLoaderMessage?options.labels.payLoaderMessage:$translate.instant('Processing payment...','payment_stripe');Loader.show(payMessage);var displayError=document.getElementById('card_errors');var displayErrorParent=document.getElementById('card_errors_parent');service.stripe.handleCardPayment(service.card).then(function(result){if(result.error){displayErrorParent.classList.remove('ng-hide');displayError.textContent=$translate.instant(result.error.message);service.paymentError(result.error.message).then(function(payload){deferred.reject(payload)})}else{displayErrorParent.classList.add('ng-hide');displayError.textContent='';service.paymentSuccess(result).then(function(payload){deferred.reject(payload)})}})}catch(e){service.paymentError(e.message).then(function(payload){deferred.reject(payload)})}
return deferred.promise};service.paymentError=function(message){return $pwaRequest.post("/paymentstripe/mobile_handler/payment-error",{data:{message:message}})};service.paymentSuccess=function(payload){return $pwaRequest.post("/paymentstripe/mobile_handler/payment-success",{data:{payload:payload}})};service.handleCardSetup=function(){var deferred=$q.defer();try{Loader.show($translate.instant('Verifying information...','payment_stripe'));var displayError=document.getElementById('card_errors');var displayErrorParent=document.getElementById('card_errors_parent');service.fetchSetupIntent().then(function(payload){service.setupIntent=payload.setupIntent;service.stripe.confirmCardSetup(service.setupIntent.client_secret,{payment_method:{card:service.card},}).then(function(result){Loader.hide();service.card.clear();if(result.error){displayErrorParent.classList.remove('ng-hide');displayError.textContent=$translate.instant(result.error.message);deferred.reject(result.error.message);return}
if(result.setupIntent&&result.setupIntent.status==='succeeded'){displayErrorParent.classList.add('ng-hide');displayError.textContent='';Loader.show();service.setupSuccess(result).then(function(success){deferred.resolve()},function(error){deferred.reject(error)})}})})}catch(e){console.log('error',e)}
return deferred.promise};service.setupError=function(message){return $pwaRequest.post('/paymentstripe/mobile_handler/setup-error',{data:{message:message}})};service.setupSuccess=function(payload){return $pwaRequest.post('/paymentstripe/mobile_handler/setup-success',{data:{payload:payload}})};service.deletePaymentMethod=function(card){return $pwaRequest.post('/paymentstripe/mobile_cards/delete-payment-method',{data:{card:card}})};service.fetchSettings=function(){return $pwaRequest.post('/paymentstripe/mobile_cards/fetch-settings')};service.fetchVaults=function(){return $pwaRequest.post('/paymentstripe/mobile_cards/fetch-vaults')};service.fetchSetupIntent=function(){return $pwaRequest.post('/paymentstripe/mobile_cards/fetch-setup-intent')};service.fetchPaymentIntent=function(card,options){return $pwaRequest.post('/paymentstripe/mobile_cards/fetch-payment-intent',{data:{card:card,options:options}})};service.clearForm=function(){service.card.clear();service.card.blur()};return service});Features.insertCSS(":root{--safe-area-inset-top:0;--safe-area-inset-right:0;--safe-area-inset-bottom:0;--safe-area-inset-left:0}@supports (padding-top:constant(safe-area-inset-top)){:root{--safe-area-inset-top:constant(safe-area-inset-top);--safe-area-inset-right:constant(safe-area-inset-right);--safe-area-inset-bottom:constant(safe-area-inset-bottom);--safe-area-inset-left:constant(safe-area-inset-left)}}@supports (padding-top:env(safe-area-inset-top)){:root{--safe-area-inset-top:env(safe-area-inset-top);--safe-area-inset-right:env(safe-area-inset-right);--safe-area-inset-bottom:env(safe-area-inset-bottom);--safe-area-inset-left:env(safe-area-inset-left)}}.platform-overview.platform-cordova{--safe-area-inset-top:1.5em;--safe-area-inset-right:0;--safe-area-inset-bottom:.5em;--safe-area-inset-left:0}#challengeFrame{pointer-events:all!important;user-select:all!important}[name^=\"__privateStripeFrame\"]{user-select:all!important;pointer-events:all!important}.payment-stripe-cards .card-item{padding:0;margin:-1px}.payment-stripe-cards .card-actions button{margin:0}","payment_stripe")